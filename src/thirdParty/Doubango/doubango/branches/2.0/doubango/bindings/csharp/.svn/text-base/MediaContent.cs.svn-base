/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.doubango.tinyWRAP {

using System;
using System.Runtime.InteropServices;

public class MediaContent : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MediaContent(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MediaContent obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MediaContent() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          tinyWRAPPINVOKE.delete_MediaContent(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public byte[] getPayload() {
    uint clen = this.getPayloadLength();
    if(clen>0){
		IntPtr ptr = Marshal.AllocHGlobal((int)clen);
        this.getPayload(ptr, clen);
        byte[] bytes = new byte[clen];
        Marshal.Copy(ptr, bytes, 0, bytes.Length);
        Marshal.FreeHGlobal(ptr);
        return bytes;
    }
    return null;
  }

  public string getType() {
    string ret = tinyWRAPPINVOKE.MediaContent_getType(swigCPtr);
    return ret;
  }

  public virtual uint getDataLength() {
    uint ret = tinyWRAPPINVOKE.MediaContent_getDataLength(swigCPtr);
    return ret;
  }

  public virtual uint getData(IntPtr pOutput, uint nMaxsize) {
    uint ret = tinyWRAPPINVOKE.MediaContent_getData(swigCPtr, pOutput, nMaxsize);
    return ret;
  }

  public static MediaContent parse(IntPtr pData, uint nSize, string pType) {
    IntPtr cPtr = tinyWRAPPINVOKE.MediaContent_parse__SWIG_0(pData, nSize, pType);
    MediaContent ret = (cPtr == IntPtr.Zero) ? null : new MediaContent(cPtr, true);
    return ret;
  }

  public static MediaContentCPIM parse(IntPtr pData, uint nSize) {
    IntPtr cPtr = tinyWRAPPINVOKE.MediaContent_parse__SWIG_1(pData, nSize);
    MediaContentCPIM ret = (cPtr == IntPtr.Zero) ? null : new MediaContentCPIM(cPtr, true);
    return ret;
  }

  public virtual uint getPayloadLength() {
    uint ret = tinyWRAPPINVOKE.MediaContent_getPayloadLength(swigCPtr);
    return ret;
  }

  public virtual uint getPayload(IntPtr pOutput, uint nMaxsize) {
    uint ret = tinyWRAPPINVOKE.MediaContent_getPayload(swigCPtr, pOutput, nMaxsize);
    return ret;
  }

}

}
