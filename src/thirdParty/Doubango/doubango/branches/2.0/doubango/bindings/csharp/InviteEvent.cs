/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.doubango.tinyWRAP {

using System;
using System.Runtime.InteropServices;

public class InviteEvent : SipEvent {
  private HandleRef swigCPtr;

  internal InviteEvent(IntPtr cPtr, bool cMemoryOwn) : base(tinyWRAPPINVOKE.InviteEvent_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(InviteEvent obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~InviteEvent() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          tinyWRAPPINVOKE.delete_InviteEvent(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public tsip_invite_event_type_t getType() {
    tsip_invite_event_type_t ret = (tsip_invite_event_type_t)tinyWRAPPINVOKE.InviteEvent_getType(swigCPtr);
    return ret;
  }

  public twrap_media_type_t getMediaType() {
    twrap_media_type_t ret = (twrap_media_type_t)tinyWRAPPINVOKE.InviteEvent_getMediaType(swigCPtr);
    return ret;
  }

  public InviteSession getSession() {
    IntPtr cPtr = tinyWRAPPINVOKE.InviteEvent_getSession(swigCPtr);
    InviteSession ret = (cPtr == IntPtr.Zero) ? null : new InviteSession(cPtr, false);
    return ret;
  }

  public CallSession takeCallSessionOwnership() {
    IntPtr cPtr = tinyWRAPPINVOKE.InviteEvent_takeCallSessionOwnership(swigCPtr);
    CallSession ret = (cPtr == IntPtr.Zero) ? null : new CallSession(cPtr, true);
    return ret;
  }

  public MsrpSession takeMsrpSessionOwnership() {
    IntPtr cPtr = tinyWRAPPINVOKE.InviteEvent_takeMsrpSessionOwnership(swigCPtr);
    MsrpSession ret = (cPtr == IntPtr.Zero) ? null : new MsrpSession(cPtr, true);
    return ret;
  }

}

}
