<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0050)http://www.gimp.org/~tml/gimp/win32/downloads.html -->
<HTML><HEAD><TITLE>Tor Lillqvist--GIMP-related downloads</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8"><LINK rev=made 
href="mailto:tml@iki.fi">
<META content="MSHTML 6.00.2900.3627" name=GENERATOR></HEAD>
<BODY>
<TABLE border=0>
  <TBODY>
  <TR>
    <TD width=200><IMG height=245 
      src="Tor Lillqvist--GIMP-related downloads_fichiers/pappa-seal.gif" 
      width=190></TD>
    <TD>
      <DIV align=left>
      <P><FONT size=+3>Misc GIMP-related packages for 
  Windows</FONT></P></DIV></TD></TR>
  <TR>
    <TD vAlign=top width=200><FONT size=+1><A 
      href="http://www.iki.fi/tml/index.html">Tor Lillqvist 
      (tml)</A></FONT><BR><A href="http://www.iki.fi/tml/gimp/index.html">GTK+ 
      Pages</A> -- <A 
      href="http://www.gimp.org/~tml/gimp/win32/index.html">Windows port</A> 
      <UL>
        <LI><A href="http://www.gimp.org/~tml/gimp/win32/why.html">Why?</A> 
        <LI><FONT color=#ff0000>Downloads</FONT> 
        <LI><A href="http://www.gimp.org/~tml/gimp/win32/pspi.html">PSPI</A> 
        </LI></UL></TD>
    <TD>
      <H2>This page</H2>
      <P>The significance of this page is currently much less than what has 
      earlier been the case. Especially if you are an end-user there isn't 
      anything for you here.</P>
      <H2>Is this the official home for GTK+ on Windows?<BR>Where are the GTK+ 
      binaries?</H2>
      <P>No. <A href="http://www.gtk.org/download-windows.html">At the GTK+ 
      site</A>. 
      <H2>Where is GIMP?</H2>
      <P>There are GIMP installers for Windows (that include GTK+) and a FAQ at 
      <A href="http://gimp-win.sourceforge.net/">gimp-win.sourceforge.net</A>. 
      The installers are created by <A 
      href="mailto:jernej.simoncic@guest.arnes.si">Jernej Simoncic</A>. </P>
      <H2>What about GNOME then?</H2>Browse around at <A 
      href="http://ftp.gnome.org/pub/gnome/binaries/win32/">http://ftp.gnome.org/pub/gnome/binaries/win32/</A>. 
      There used to be a more detailled list here, but just follow that link and 
      have a look. 
      <H2>Various stuff not linked to from the GTK+ site</H2>
      <P>The links below are to packages that are used mainly by GIMP, and thus 
      not listed on the GTK+ site.</P>
      <UL>
        <LI>
        <P><A 
        href="http://www.gimp.org/~tml/gimp/win32/xpm-nox-4.0.3-20020617.zip">xpm-nox-4.0.3-20020617.zip</A> 
        A version of the Xpm library that does not use X. Used by the xpm 
        plug-in in GIMP.</P>
        <LI>
        <P><A 
        href="http://www.gimp.org/~tml/gimp/win32/xpm-nox-dev-4.0.3-20020112.zip">xpm-nox-dev-4.0.3-20020112.zip</A>, 
        corresponding developer package.</P>
        <LI>
        <P><A 
        href="http://ftp.gnome.org/pub/gnome/binaries/win32/libart_lgpl/2.3/libart_lgpl-2.3.17.zip">libart_lgpl-2.3.17.zip</A>. 
        Libart binary (DLL). Libart is used by GIMP. <A 
        href="http://ftp.gnome.org/pub/gnome/binaries/win32/libart_lgpl/2.3/libart_lgpl-dev-2.3.17.zip">libart_lgpl-dev-2.3.17.zip</A>. 
        Developer package. </P>
        <LI>
        <P><A 
        href="http://ftp.gnome.org/pub/gnome/sources/libart_lgpl/2.3/libart_lgpl-2.3.17.tar.gz">libart_lgpl-2.3.17.tar.gz</A>. 
        Libart sources.</P>
        <LI>
        <P><A 
        href="http://www.gimp.org/~tml/gimp/win32/libexif-0.6.16.zip">libexif-0.6.16.zip</A>. 
        Libexif binary (libexif-12.dll). Libexif is used by the jpeg plug-in in 
        GIMP. <A 
        href="http://www.gimp.org/~tml/gimp/win32/libexif-dev-0.6.16.zip">libexif-dev-0.6.16.zip</A>. 
        Developer package. <A 
        href="http://sourceforge.net/projects/libexif">Libexif home page, with 
        sources</A>.</P>
        <LI>
        <P><A 
        href="http://www.zlatkovic.com/projects/libxml/binaries.html">libxml2</A> 
        (Windows binaries provided by Igor Zlatkovic). </P>
        <LI>
        <P>GIMP contains a display filter module for colour proofing. It uses 
        the lcms (Little CMS) library. Here is <A 
        href="http://www.gimp.org/~tml/gimp/win32/lcms-runtime-1.11.zip">lcms-runtime-1.11.zip</A>, 
        the lcms DLL. Built with libtool and mingw (gcc). Unlike the DLL from <A 
        href="http://www.littlecms.com/downloads.htm">the Little CMS site</A>, 
        this actually works with GIMP's color proof display module. (I don't 
        know what the exact problems with the DLL from the Little CMS site is, 
        but it caused crashes for me.) <A 
        href="http://www.gimp.org/~tml/gimp/win32/lcms-dev-1.11.zip">lcms-dev-1.11.zip</A> 
        is the corresponding developer package.</P>
        <LI>
        <P><A 
        href="http://www.littlecms.com/lcms-1.11.tar.gz">lcms-1.11.tar.gz</A>. 
        Little CMS sources (not on this site).</P>
        <LI>
        <P>The wmf plug-in in GIMP uses the <A 
        href="http://wvware.sourceforge.net/libwmf.html">libwmf library</A>. 
        Unfortunately, there is no official Windows binary distribution of 
        libwmf, and libwmf requires some fixes to work properly in Windows 
        (mainly, installation location independence). Here are <A 
        href="http://www.gimp.org/~tml/gimp/win32/libwmf-runtime-0.2.8.1-tml-20031201.zip">libwmf 
        0.2.8.1 (patched) runtime</A>, <A 
        href="http://www.gimp.org/~tml/gimp/win32/libwmf-dev-0.2.8.1-tml-20031201.zip">corresponding 
        developer package</A>, and <A 
        href="http://www.gimp.org/~tml/gimp/win32/libwmf-0.2.8.1-tml-20031201.tar.gz">sources</A>.</P>
        <LI>
        <P><A 
        href="http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/poppler-0.6.4.zip">poppler-0.6.4.zip</A>, 
        <A 
        href="http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/poppler-dev-0.6.4.zip">poppler-dev-0.6.4.zip</A>, 
        and <A 
        href="http://ftp.gnome.org/pub/gnome/binaries/win32/dependencies/poppler-data-0.1.1.zip">poppler-data-0.1.1.zip</A>. 
        The poppler library, used by GIMP's poppler plug-in that handles loading 
        of pages from PDF files.</P></LI></UL>
      <H3>GIMP plugin development package</H3>
      <UL>
        <LI>
        <P><A 
        href="http://www.gimp.org/~tml/gimp/win32/gimp-dev-2.4.zip">gimp-dev-2.4.zip</A> 
        Developer package for GIMP&nbsp;2.4. Contains headers and import 
        libraries (both .dll.a and .lib). Useful for people building 
        plug-ins.</P>
        <LI>
        <P><A 
        href="http://www.gimp.org/~tml/gimp/win32/gimp-dev-2.2.7.zip">gimp-dev-2.2.7.zip</A> 
        Developer package for GIMP&nbsp;2.2.</P></LI></UL>
      <H3>PSPI</H3>pspi is a GIMP plug-in that runs Photoshop plug-ins (.8bf 
      files). See <A 
      href="http://www.gimp.org/~tml/gimp/win32/pspi.html">separate page</A>. 
      <H3>Very obsolete versions</H3>
      <UL>
        <LI>
        <P><A 
        href="http://www.gimp.org/~tml/gimp/win32/old/gtk+-1.3.0-20040315.zip">gtk+-1.3.0-20040315.zip 
        </A>. GTK+&nbsp;1.3.0 runtime package. This is the 
        gtk-1-3-win32-production branch of GTK+. The GTK+ version is 1.3.0, 
        which is quite old. The GTK+ API was still mostly like GTK+ 1.2.7, which 
        is what was current when this branch was created. Unfortunately, very 
        few of the platform-independent fixes (in the gtk widgets) that went 
        into GTK+&nbsp;1.2 since 1.2.7 are present. Unlike GTK+&nbsp;1.2 on 
        Unix, GTK+&nbsp;1.3.0 on Windows is built to use GLib&nbsp;2.x. There is 
        no binary distribution of any GLib&nbsp;1.2 for Windows.</P>
        <LI>
        <P><A 
        href="http://www.gimp.org/~tml/gimp/win32/old/gtk+-dev-1.3.0-20030115.zip">gtk+-dev-1.3.0-20030115.zip</A>. 
        Corresponding developer package. (How can it be so much older than the 
        runtime package, you ask? Because the API or ABI does not change, there 
        is no change to headers or import libraries.)</P>
        <LI>
        <P>The source for this GTK+ version is in <A 
        href="http://www.gimp.org/~tml/gimp/win32/old/gtk+-1.3.0-20040315-src.zip">gtk+-1.3.0-20040315-src.zip</A>. 
        There is no other distribution of the source to this GTK+ branch. You 
        can get it from GNOME SVN, though, look for the gtk-1-3-win32-production 
        branch of the gtk+ module.</P></LI></UL>
      <H3>pkg-config</H3>
      <P>pkg-config is a replacement for the glib-config and gtk-config scripts 
      that long ago were used on Unix. (No such scripts were ever distributed 
      with my Windows port, though.)</P>
      <P>You can use the pkg-config command in your makefiles like this:</P><PRE>GLIB_CFLAGS=`pkg-config --cflags glib-2.0`
GLIB_LIBS=`pkg-config --libs glib-2.0`
...
foobar.exe : $(FOOBAR_OBJS)
	   $(CC) -o $@ $(FOOBAR_OBJS) $(GLIB_LIBS)
</PRE>
      <P>Etc. That only works with a Unixish Make and especially with a command 
      interpreter (shell) that understands backquotes. (I hope you notice those 
      backquotes in the above Makefile snippet, and understand what they mean. 
      If you don't, educate yourself.)</P>
      <P>I advise not to use a folder with spaces or other funny character in 
      the name as <I>top</I>. Otherwise you will get problems when using 
      pkg-config output in makefiles. </P>
      <P>If you are a MSVC user and use nmake, it's a bit more complicated. 
      nmake (or the standard Windows command interpreter it uses, command.com or 
      cmd.exe) doesn't support backquotes. You must run pkg-config manually with 
      the switch <TT>--msvc-syntax</TT>, and paste its output into your nmake 
      makefile.</P>
      <P>On NT/2k/XP, it is possible to have nmake create temporary files 
      containing the output from pkg-config, and use those in a nmake makefile 
      like this: </P><PRE>foobar.exe: foobar.obj __gtk_libs.mak
	cl -MD foobar.obj @__gtk_libs.mak
	@del __gtk_libs.mak

foobar.obj: foobar.c __gtk_cflags.mak
	cl -MD -c @__gtk_cflags.mak foobar.c
	@del __gtk_cflags.mak

__gtk_cflags.mak:
	pkg-config --msvc-syntax --cflags gtk+-2.0 &gt;$@

__gtk_libs.mak:
	for /F "delims==" %i in ('pkg-config --msvc-syntax --libs gtk+-2.0') \
		do echo /link %i &gt;$@
</PRE>
      <P>Note in the above makefile fragment that the <TT>__gtk_libs.mak</TT> 
      file is created using the <TT>for /F</TT> syntax available only in the 
      cmd.exe command interpreter on NT/2k/XP. These obscure acrobatics are 
      needed because we want <TT>__gtk_libs.mak</TT> to contain a line that 
      starts with <TT>/link</TT>, but pkg-config cannot output the 
      <TT>/link</TT> flag itself as a cl command line might contain several 
      invokations of pkg-config --libs. We cannot put the <TT>/link</TT> on the 
      cl command line that links <TT>foobar.exe</TT> either, as cl then gets 
      confused and runs the linker with a command file that on one line has 
      <TT>@__gtk_libs.mak</TT>, and link.exe doesn't like that. 
  Sigh.</P></TD></TR></TBODY></TABLE>
<HR>

<P><A href="http://validator.w3.org/check/referer"><IMG height=31 
alt="Valid HTML 3.2!" 
src="Tor Lillqvist--GIMP-related downloads_fichiers/valid-html32.png" width=88 
border=0></A> </P></BODY></HTML>
