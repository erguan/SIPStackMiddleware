/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.doubango.tinyWRAP {

using System;
using System.Runtime.InteropServices;

public class InviteSession : SipSession {
  private HandleRef swigCPtr;

  internal InviteSession(IntPtr cPtr, bool cMemoryOwn) : base(tinyWRAPPINVOKE.InviteSessionUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(InviteSession obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~InviteSession() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        tinyWRAPPINVOKE.delete_InviteSession(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public InviteSession(SipStack Stack) : this(tinyWRAPPINVOKE.new_InviteSession(SipStack.getCPtr(Stack)), true) {
  }

  public bool accept(ActionConfig config) {
    bool ret = tinyWRAPPINVOKE.InviteSession_accept__SWIG_0(swigCPtr, ActionConfig.getCPtr(config));
    return ret;
  }

  public bool accept() {
    bool ret = tinyWRAPPINVOKE.InviteSession_accept__SWIG_1(swigCPtr);
    return ret;
  }

  public bool hangup(ActionConfig config) {
    bool ret = tinyWRAPPINVOKE.InviteSession_hangup__SWIG_0(swigCPtr, ActionConfig.getCPtr(config));
    return ret;
  }

  public bool hangup() {
    bool ret = tinyWRAPPINVOKE.InviteSession_hangup__SWIG_1(swigCPtr);
    return ret;
  }

  public bool reject(ActionConfig config) {
    bool ret = tinyWRAPPINVOKE.InviteSession_reject__SWIG_0(swigCPtr, ActionConfig.getCPtr(config));
    return ret;
  }

  public bool reject() {
    bool ret = tinyWRAPPINVOKE.InviteSession_reject__SWIG_1(swigCPtr);
    return ret;
  }

  public MediaSessionMgr getMediaMgr() {
    IntPtr cPtr = tinyWRAPPINVOKE.InviteSession_getMediaMgr(swigCPtr);
    MediaSessionMgr ret = (cPtr == IntPtr.Zero) ? null : new MediaSessionMgr(cPtr, false);
    return ret;
  }

}

}
